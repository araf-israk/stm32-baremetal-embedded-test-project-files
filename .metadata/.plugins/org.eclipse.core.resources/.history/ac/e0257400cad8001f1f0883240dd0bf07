#include "adxl345.h"

#define MULTI_BYTE_EN      0x40
#define READ_OPERATION 	   0x80


void adxl_read_address (uint8_t address, uint8_t* rxdata)
{
	/*Set read operation*/
	address |= READ_OPERATION;

	/*Enable multi-byte*/
	address |= MULTI_BYTE_EN;

	/*pull CS line low to enable slave*/
	cs_enable();

	/*Send address*/
	spi1_transmit(&address, 1);

	/*Read 6 bytes*/
	spi1_receive(rxdata, 6);
}

void adxl_write (uint8_t address, uint8_t value)
{
	uint8_t data[2];

	/*Enable multi-byte, place address into buffer*/
	data[0] = address | MULTI_BYTE_EN;

	/*Place data into buffer*/
	data[1] = value;

	/*pull CS line low to enable slave*/
	cs_enable();

	/*Transmit data and address*/
	spi1_transmit(data, 2);

	/*pull CS line high to disable slave*/
	cs_disable();


}


void adxl_init (void)
{
	/*Enable SPI gpio*/
	spi_gpio_init();

	/*SPI config*/
	spi1_config();

	/*Read the DEVID, this should return 0xE5*/
	adxl_read_address(DEVID_R);

	/*Set data format range to +-4g*/
	adxl_write (DATA_FORMAT_R, FOUR_G);

	/*Reset all bits*/
	adxl_write (POWER_CTL_R, RESET);

	/*Configure power control measure bit*/
	adxl_write (POWER_CTL_R, SET_MEASURE_B);
}
